* Add new customer
:PROPERTIES:
:header-args: sql :engine postgresql :dbuser nico :database auction
:END:

After creating the database, set up the 3 tables using the following specifications:

bidders
id of type SERIAL: this should be a primary key
name of type text: this should be NOT NULL

#+BEGIN_SRC sql
  CREATE TABLE bidders(
    id serial PRIMARY KEY,
    name text NOT NULL);

#+END_SRC

#+RESULTS:
| CREATE TABLE |
|--------------|
items
id of type SERIAL: this should be a primary key
name of type text: this should be NOT NULL
initial_price and sales_price: These two columns should both be of type numeric. Each column should be able to hold a number as high as 1000 dollars with 2 decimal points of precision.
The initial_price represents the starting price of an item when it is first put up for auction. This column should never be NULL.
The sales_price represents the final price at which the item was sold. This column may be NULL, as it is possible to have an item that was never sold off.

#+BEGIN_SRC sql
  CREATE TABLE items(
    id serial PRIMARY KEY,
    name text NOT NULL,
    initial_price NUMERIC(6,2) NOT NULL CHECK(initial_price <= 1000),
    sales_price NUMERIC(6, 2) CHECK(sales_price <= 1000));
#+END_SRC

#+RESULTS:
| CREATE TABLE |
|--------------|

Fix check on prices so that they cannot be negative

#+BEGIN_SRC sql
  ALTER TABLE items
    DROP CONSTRAINT items_initial_price_check,
    DROP CONSTRAINT items_sales_price_check,
    ADD CHECK (initial_price BETWEEN .01 AND 1000),
    ADD CHECK (sales_price BETWEEN .01 AND 1000);
#+END_SRC

#+RESULTS:
| ALTER TABLE |
|-------------|

bids
id of type SERIAL: this should be a primary key
bidder_id, item_id: These will be of type integer and should not be NULL. This table connects a bidder with an item and each row represents an individual bid. There should never be a row that has bidder_id or item_id unknown or NULL. Nor should there ever be a bid that references a nonexistent item or bidder. If the item or bidder associated with a bid is removed, that bid should also be removed from the database.
Create your bids table so that both bidder_id and item_id together form a composite index for faster lookup.
amount - The amount of money placed for each individual bid by a bidder. This column should be of the same type as items.initial_price and have the same constraints.

#+BEGIN_SRC sql
  CREATE TABLE bids(
    id serial PRIMARY KEY,
    bidder_id int NOT NULL REFERENCES bidders(id) ON DELETE cascade,
    item_id int NOT NULL REFERENCES items(id) ON DELETE CASCADE,
    amount numeric(6, 2) NOT NULL CHECK(amount <= 1000));
#+END_SRC

#+RESULTS:
| CREATE TABLE |
|--------------|

Add index to above table

#+BEGIN_SRC sql
 CREATE index ON bids(bidder_id, item_id);

#+END_SRC

#+RESULTS:
| CREATE INDEX |
|--------------|

Fix check on amount so that it can't be negative

#+BEGIN_SRC sql
  ALTER TABLE bids
    DROP CONSTRAINT bids_amount_check,
    ADD CHECK (amount BETWEEN 0.01 AND 1000);
#+END_SRC

#+RESULTS:
| ALTER TABLE |
|-------------|

