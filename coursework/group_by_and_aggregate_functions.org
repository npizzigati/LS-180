* GROUP BY and Aggregate Functions
:PROPERTIES:
:header-args: sql :engine postgresql :dbuser nico :database group_by
:END:

** Write SQL statements that will insert the following films into the database:

| title           | year | genre     | director          | duration |
| Wayne's World   | 1992 | comedy    | Penelope Spheeris |       95 |
| Bourne Identity | 2002 | espionage | Doug Liman        |      118 |


#+BEGIN_SRC sql
  INSERT INTO films (title, year, genre, director, duration)
  VALUES
    ('Wayne''s World', 1992, 'comedy', 'Penelope Spheeris', 95),
    ('Bourne Identity', 2002, 'espionage', 'Doug Liman', 118);
#+END_SRC

#+RESULTS:
| INSERT 0 2 |
|------------|

** Write a SQL query that lists all genres for which there is a movie in the films table.

#+BEGIN_SRC sql
  SELECT DISTINCT genre FROM films;
#+END_SRC

#+RESULTS:
| genre     |
|-----------|
| thriller  |
| horror    |
| comedy    |
| scifi     |
| action    |
| crime     |
| drama     |
| espionage |

** Write a SQL query that returns the same results as the answer for #3, but without using DISTINCT.


#+BEGIN_SRC sql
  SELECT genre FROM films
   GROUP BY genre; 
#+END_SRC

#+RESULTS:
| genre     |
|-----------|
| thriller  |
| horror    |
| comedy    |
| scifi     |
| action    |
| crime     |
| drama     |
| espionage |

** Write a SQL query that determines the average duration across all the movies in the films table, rounded to the nearest minute.


#+BEGIN_SRC sql
  SELECT round(AVG(duration)) AS "average duration" FROM films;
#+END_SRC

#+RESULTS:
| average duration |
|------------------|
|              120 |

** Write a SQL query that determines the average duration for each genre in the films table, rounded to the nearest minute.


#+BEGIN_SRC sql
  SELECT genre, round(AVG(duration)) AS "average duration"
    FROM films
   GROUP BY genre;
#+END_SRC

#+RESULTS:
| genre     | average duration |
|-----------+------------------|
| thriller  |              113 |
| horror    |              113 |
| comedy    |              104 |
| scifi     |              126 |
| action    |              132 |
| crime     |              175 |
| drama     |               99 |
| espionage |              127 |

** Write a SQL query that determines the average duration of movies for each decade represented in the films table, rounded to the nearest minute and listed in chronological order.


#+BEGIN_SRC sql
  SELECT concat(SUBSTRING(year::text, 1, 3), '0''s') AS decade,
         round(AVG(duration)) FROM films
   GROUP BY decade
   ORDER BY decade;

#+END_SRC

#+RESULTS:
| decade | round |
|--------+-------|
| 1940's |   102 |
| 1950's |    93 |
| 1970's |   144 |
| 1980's |   112 |
| 1990's |   120 |
| 2000's |   113 |
| 2010's |   133 |

** Write a SQL query that finds all films whose director has the first name John.


#+BEGIN_SRC sql
  SELECT * FROM films
   WHERE director LIKE 'John %';

#+END_SRC

#+RESULTS:
| id | title      | year | genre  | director                | duration |
|----+------------+------+--------+-------------------------+----------|
|  1 | Die Hard   | 1988 | action | John McTiernan          |      132 |
| 12 | Home Alone | 1990 | comedy | John Wilden Hughes, Jr. |      102 |
| 13 | Hairspray  | 1988 | comedy | John Waters             |       92 |

** Write a SQL query that will return the following data:
genre   | count
-----------+-------
 scifi     |     5
 comedy    |     4
 drama     |     2
 espionage |     2
 crime     |     1
 thriller  |     1
 horror    |     1
 action    |     1
(8 rows)
#+BEGIN_SRC sql
  SELECT genre, COUNT(id) FROM films
   GROUP BY genre
   ORDER BY COUNT DESC;

#+END_SRC

#+RESULTS:
| genre     | count |
|-----------+-------|
| scifi     |     5 |
| comedy    |     3 |
| drama     |     2 |
| crime     |     1 |
| thriller  |     1 |
| espionage |     1 |
| horror    |     1 |
| action    |     1 |

** Write a SQL query that will return the following data:

 decade |   genre   |                  films
--------+-----------+------------------------------------------
   1940 | drama     | Casablanca
   1950 | drama     | 12 Angry Men
   1950 | scifi     | 1984
   1970 | crime     | The Godfather
   1970 | thriller  | The Conversation
   1980 | action    | Die Hard
   1980 | comedy    | Hairspray
   1990 | comedy    | Home Alone, The Birdcage, Wayne's World
   1990 | scifi     | Godzilla
   2000 | espionage | Bourne Identity
   2000 | horror    | 28 Days Later
   2010 | espionage | Tinker Tailor Soldier Spy
   2010 | scifi     | Midnight Special, Interstellar, Godzilla
(13 rows)


#+BEGIN_SRC sql
  SELECT year / 10 * 10 AS decade, genre,
         string_agg(title, ', ') AS films FROM films
   GROUP BY decade, genre
   ORDER BY decade;

#+END_SRC

#+RESULTS:
| decade | genre     | films                                    |
|--------+-----------+------------------------------------------|
|   1940 | drama     | Casablanca                               |
|   1950 | drama     | 12 Angry Men                             |
|   1950 | scifi     | 1984                                     |
|   1970 | crime     | The Godfather                            |
|   1970 | thriller  | The Conversation                         |
|   1980 | action    | Die Hard                                 |
|   1980 | comedy    | Hairspray                                |
|   1990 | comedy    | Home Alone, The Birdcage, Wayne's World  |
|   1990 | scifi     | Godzilla                                 |
|   2000 | espionage | Bourne Identity                          |
|   2000 | horror    | 28 Days Later                            |
|   2010 | espionage | Tinker Tailor Soldier Spy                |
|   2010 | scifi     | Midnight Special, Interstellar, Godzilla |

** Write a SQL query that will return the following data:

   genre   | total_duration
-----------+----------------
 horror    |            113
 thriller  |            113
 action    |            132
 crime     |            175
 drama     |            198
 espionage |            245
 comedy    |            407
 scifi     |            632
(8 rows)


#+BEGIN_SRC sql
  SELECT genre, SUM(duration) AS total_duration
    FROM films
   GROUP BY genre
   ORDER BY total_duration;

#+END_SRC

#+RESULTS:
| genre     | total_duration |
|-----------+----------------|
| thriller  |            113 |
| horror    |            113 |
| action    |            132 |
| crime     |            175 |
| drama     |            198 |
| espionage |            245 |
| comedy    |            407 |
| scifi     |            632 |
